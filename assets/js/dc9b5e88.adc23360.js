"use strict";(self.webpackChunksketchybar_site=self.webpackChunksketchybar_site||[]).push([[882],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(n),f=a,d=m["".concat(c,".").concat(f)]||m[f]||u[f]||o;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5598:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={id:"tricks",title:"Tips & Tricks",sidebar_position:1},c=void 0,l={unversionedId:"config/tricks",id:"config/tricks",title:"Tips & Tricks",description:"Batching of configuration commands",source:"@site/docs/config/Tricks.md",sourceDirName:"config",slug:"/config/tricks",permalink:"/config/tricks",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"tricks",title:"Tips & Tricks",sidebar_position:1},sidebar:"docs",previous:{title:"Type Nomenclature",permalink:"/config/types"},next:{title:"Credits",permalink:"/credits"}},p={},u=[{value:"Batching of configuration commands",id:"batching-of-configuration-commands",level:2},{value:"Performance optimizations",id:"performance-optimizations",level:2}],m={toc:u};function f(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"batching-of-configuration-commands"},"Batching of configuration commands"),(0,o.kt)("p",null,"It is possible to batch commands together into a single call to sketchybar, this can be helpful to\nkeep the configuration file a bit cleaner and also to reduce startup times.\nAssume 5 individual configuration calls to sketchybar:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sketchybar --bar position=top\nsketchybar --bar margin=5\nsketchybar --add item demo left\nsketchybar --set demo label=Hello\nsketchybar --subscribe demo system_woke\n")),(0,o.kt)("p",null,"after each configuration command the bar is redrawn (if needed), thus it is more perfomant to append these calls into a single command like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sketchybar --bar position=top           \\\n                 margin=5               \\\n           --add item demo left         \\\n           --set demo label=Hello       \\\n           --subscribe demo system_woke\n")),(0,o.kt)("p",null,"The backslash at the end of the first 4 lines is the default bash way to join lines together and should not be followed by a whitespace.  "),(0,o.kt)("h2",{id:"performance-optimizations"},"Performance optimizations"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"SketchyBar")," can be configured to have a ",(0,o.kt)("em",{parentName:"p"},"very")," small performance footprint. In the following I will highlight some optimizations that can be used to reduce the footprint further. "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Batch together configuration commands where ever possible."),(0,o.kt)("li",{parentName:"ul"},"Set items to be ",(0,o.kt)("em",{parentName:"li"},"lazy"),", e.g. I have an alias component in my bar that updates every ",(0,o.kt)("em",{parentName:"li"},"2")," seconds, thus I set all ",(0,o.kt)("em",{parentName:"li"},"non-reactive")," items to ",(0,o.kt)("em",{parentName:"li"},"lazy=on"),",\nand only the ones that should react to change instantaneously to ",(0,o.kt)("em",{parentName:"li"},"lazy=off"),"."),(0,o.kt)("li",{parentName:"ul"},"Set ",(0,o.kt)("em",{parentName:"li"},"updates=when_shown")," for items that do not need to run their script if they are not rendered."),(0,o.kt)("li",{parentName:"ul"},"Reduce the ",(0,o.kt)("em",{parentName:"li"},"update_freq")," of ",(0,o.kt)("em",{parentName:"li"},"scripts")," and ",(0,o.kt)("em",{parentName:"li"},"aliases")," and use event-driven scripting when ever possible."),(0,o.kt)("li",{parentName:"ul"},"Do not add ",(0,o.kt)("em",{parentName:"li"},"aliases")," to apps that are not always running, otherwise sketchybar searches for them continously.")))}f.isMDXComponent=!0}}]);